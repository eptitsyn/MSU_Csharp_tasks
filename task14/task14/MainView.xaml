<Window x:Class="task14.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:task14"
        mc:Ignorable="d"
        Title="{Binding Path=Filepath, StringFormat='Notepad - {0}'}" Height="350" Width="525">
    <Window.Resources>
        <local:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
        <local:BooleanToTextWrappingConverter x:Key="BooleanToTextWrappingConverter" />
    </Window.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>
        <Menu Grid.Row="0">
            <MenuItem Header="_File">
                <MenuItem Header="New" Command="{Binding NewCommand}" />
                <MenuItem Header="Open.." Command="{Binding LoadCommand}" />
                <MenuItem Header="Save" Command="{Binding SaveCommand}" />
                <MenuItem Header="Save As.." Command="{Binding SaveAsCommand}" />
                <Separator />
                <MenuItem Header="E_xit" Command="{Binding ExitCommand}" />
            </MenuItem>
            <MenuItem Header="_Edit">
                <!-- Встроенные комманды работают, но сделаем руками ради интереса.
                 
                <MenuItem Header="Undo" CommandTarget="{Binding ElementName=TextBox}" Command="Undo"/>
                <MenuItem Header="Redo" CommandTarget="{Binding ElementName=TextBox}" Command="Redo"/>
                <Separator/>
                <MenuItem Header="Cut" CommandTarget="{Binding ElementName=TextBox}" Command="Cut"/>
                <MenuItem Header="Copy" CommandTarget="{Binding ElementName=TextBox}" Command="Copy"/>
                <MenuItem Header="Paste" CommandTarget="{Binding ElementName=TextBox}" Command="Paste"/>
                <MenuItem Header="Delete" CommandTarget="{Binding ElementName=TextBox}" Command="Delete"/>
                <Separator/>
                <MenuItem Header="Select All" CommandTarget="{Binding ElementName=TextBox}" Command="SelectAll"/>-->
                <!--////////////////////-->

                <MenuItem Header="Undo" Command="{Binding Path=UndoCommand}" />
                <MenuItem Header="Redo" Command="{Binding Path=RedoCommand}" />
                <Separator />
                <MenuItem Header="Cut" Command="{Binding Path=CutCommand}" />
                <MenuItem Header="Copy" Command="{Binding Path=CopyCommand}" />
                <MenuItem Header="Paste" Command="{Binding Path=PasteCommand}" />
                <Separator />
                <MenuItem Header="Select All" Command="{Binding Path=SelectAllCommand}" />
                <!--////////////////////-->
                <MenuItem Header="Time/Date" Command="{Binding DateTimeCommand}" />
            </MenuItem>
            <MenuItem Header="Format">
                <MenuItem x:Name="WordWrapCheckbox" Header="Word Wrap" IsCheckable="True" />
                <MenuItem x:Name="SpellcheckCheckbox" Header="Spellcheck" IsCheckable="True" />
            </MenuItem>
            <MenuItem Header="_View">
                <MenuItem x:Name="StatusBarCheckbox" Header="Status Bar" IsCheckable="True" IsChecked="True" />
            </MenuItem>
        </Menu>
                                                 <!--↓↓↓↓↓↓↓↓↓↓↓↓↓не знаю насколько это правильно относительно MVVM байндить вьюшку ко вьюшке-->
        <TextBox Name="TextBox" Grid.Row="1"
                 TextWrapping="{Binding ElementName=WordWrapCheckbox, Path=IsChecked, Converter={StaticResource BooleanToTextWrappingConverter}}"
                 SpellCheck.IsEnabled="{Binding SpellcheckCheckbox}"
                 AcceptsReturn="True" VerticalScrollBarVisibility="Visible" HorizontalScrollBarVisibility="Visible"
                 Text="{Binding Path=Text, UpdateSourceTrigger=PropertyChanged}" />
        <Grid Grid.Row="2"
              Visibility="{Binding ElementName=StatusBarCheckbox, Path=IsChecked, Converter={StaticResource BooleanToVisibilityConverter}}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <Separator Grid.Column="1" />
            <TextBlock Grid.Column="2" Text="Status Bar(nothing here is implimented you can hide me from menu)" />
        </Grid>
    </Grid>
</Window>